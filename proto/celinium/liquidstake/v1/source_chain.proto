syntax = "proto3";
package celinium.liquidstake.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "celinium/x/liquidstake/types";

message Validator{
    option (gogoproto.equal) = true;

    // The address of source chain validator account.
    string address  = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
    
    // Total allocated amount.
    string tokenAmount = 2 [
        (cosmos_proto.scalar)  = "cosmos.Int",
        (gogoproto.customtype) = "Int",
        (gogoproto.nullable)   = false];

    // The weight used for distribute delegation funds.    
    uint64 weight = 3;
}

message SourceChain {
    // The chain id of source chain.
    string chainID = 1;

    // ibc connection id
    string connectionID = 2;

    // ibc transfer channel id
    string transferChannelID = 3;

    // validator address prefix of source chain.
    string bech32ValidatorAddrPrefix = 4;

    repeated Validator validators  = 5 [(gogoproto.nullable) = false];

    // The address of interchain account for withdraw POS reward
    string withdrawAddress = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    // The address of for ecsrow user's token
    string ecsrowAddress = 7 [(cosmos_proto.scalar) = "cosmos.AddressString"];
 
    // The address of interchain account for delegation
    string delegateAddress = 8 [(cosmos_proto.scalar) = "cosmos.AddressString"];

    // Redemption ratio in the current epoch
    string redemptionratio = 9 [
        (cosmos_proto.scalar)  = "cosmos.Dec",
        (gogoproto.customtype) = "Dec",
        (gogoproto.nullable)   = false
    ];

    // The denom of cross chain token.
    string ibcDenom = 10;

    // The denom of source chain native token.
    string nativeDenom = 11;

    // Derivative token denom generated after liquid stake
    string derivativeDenom = 12;

    // The amount of staked token.
    string stakedAmount = 13 [
        (cosmos_proto.scalar)  = "cosmos.Int",
        (gogoproto.customtype) = "Int",
        (gogoproto.nullable)   = false
    ];
}

message Validators {
    repeated Validator validators  = 1 [(gogoproto.nullable) = false];
}