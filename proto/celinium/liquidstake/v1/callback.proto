syntax = "proto3";
package celinium.liquidstake.v1;

option go_package = "celinium/x/liquidstake/types";

// As IBC calls are asynchronous and their acknowledgement arrival order cannot be controlled, we need a callback mechanism.
// Following the IBC communication mechanism, we can save information such as {ibcChannelID+sequence}: IBCCallbackArgs.
// When an IBC ACK is received, deserialize the args based on the CallType and execute the corresponding operation.
message IBCCallbackArgs{
    // The type of the callback operation.
    uint32 callType = 1;
    // The arguments of the callback, serialized as a string.
    string args = 2;
}